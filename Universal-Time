-- Services
local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")

-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = Players.LocalPlayer:WaitForChild("PlayerGui")

-- Define coordinates for Quest Giver and Zoro
local X_QuestGiver, Y_QuestGiver, Z_QuestGiver = 2056, 973, 320 -- Example coordinates
local X_Zoro, Y_Zoro, Z_Zoro = 1009, 1008, -235 -- Example coordinates

-- fireproximityprompt function definition
local function fireproximityprompt(ProximityPrompt: ProximityPrompt, Amount: Integer, Skip: Boolean)
    assert(ProximityPrompt, "Argument #1 Missing or nil")
    assert(typeof(ProximityPrompt) == "Instance" and ProximityPrompt:IsA("ProximityPrompt"), "Attempted to fire a Value that is not a ProximityPrompt")

    local HoldDuration = ProximityPrompt.HoldDuration
    if Skip then
        ProximityPrompt.HoldDuration = 0
    end

    for i = 1, Amount or 1 do
        ProximityPrompt:InputHoldBegin()
        if Skip then
            local RunService = game:GetService("RunService")
            local Start = time()
            repeat
                RunService.Heartbeat:Wait(0.1)
            until time() - Start > HoldDuration
        end
        Prompt:InputHoldEnd()
    end
    Prompt.HoldDuration = HoldDuration
end

-- Function to interact with swords
local function interactWithSwords()
    local player = Players.LocalPlayer
    local character = player.Character
    if not character then return end
    
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then return end
    
    local swords = {"Sword1", "Sword2", "Sword3"} -- Names of the swords in Workspace
    local tweenInfo = TweenInfo.new(2, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
    
    for _, swordName in ipairs(swords) do
        local sword = workspace:FindFirstChild(swordName)
        if sword then
            -- Calculate the target position 10 units above the sword's location
            local targetPosition = sword.Root.Position + Vector3.new(0, 10, 0)
            
            -- Create and play the tween to move to the sword
            local tween = TweenService:Create(humanoidRootPart, tweenInfo, {CFrame = CFrame.new(targetPosition)})
            tween:Play()
            
            tween.Completed:Wait() -- Wait for the tween to finish
            
            -- Use the custom fireprompt function to interact with the  prompt
            local Prompt = sword.Root.Prompt
            Prompt.MaxActivationDistance = 75
            if Prompt then
                -- Set MaxActivationDistance to 100 for all  prompts
                Prompt.MaxActivationDistance = 75
                wait(1)
                -- Call fireprompt directly for each sword
                fireproximityprompt(proximityPrompt, 1, false) -- Default to 1 interaction, without skipping
                
            else
                warn("ProximityPrompt not found for", swordName)
            end
            
            wait(1) -- Short delay after interaction
        else
            warn("Sword not found:", swordName)
        end
    end
end



-- Function to interact with Zoro
local function interactWithZoro()
    local player = Players.LocalPlayer
    local character = player.Character
    if not character then return end
    
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then return end
    
    -- Tween to ZoroCoords
    local targetPosition = Vector3.new(X_Zoro, Y_Zoro, Z_Zoro)
    local tween = TweenService:Create(humanoidRootPart, TweenInfo.new(2), {CFrame = CFrame.new(targetPosition)})
    tween:Play()
    tween.Completed:Wait()
    
    -- Interact with the "Interaction" proximity prompt
    local proximityPrompt = workspace.NPCS.Zoro.HumanoidRootPart.Attachment.Interaction
    if proximityPrompt then
        -- Set the HoldDuration to 0 for immediate interaction
        proximityPrompt.HoldDuration = 0
        
        fireproximityprompt(proximityPrompt, 1, false)
        
        -- Reset the HoldDuration to its original value if needed
        proximityPrompt.HoldDuration = 0 -- Assuming the default value was 0.1 seconds
        
        wait(1) -- Wait for 1 second after interaction with Zoro
    else
        warn("ProximityPrompt not found for Zoro")
    end

    -- Perform the sword interaction part
    interactWithSwords()
    
    -- Return to ZoroCoords and interact again
    targetPosition = Vector3.new(X_Zoro, Y_Zoro, Z_Zoro)
    tween = TweenService:Create(humanoidRootPart, TweenInfo.new(2), {CFrame = CFrame.new(targetPosition)})
    tween:Play()
    tween.Completed:Wait()
    
    proximityPrompt = workspace.NPCS.Zoro.HumanoidRootPart.Attachment.Interaction
    if proximityPrompt then
        -- Again, set the HoldDuration to 0 for immediate interaction
        proximityPrompt.HoldDuration = 0
        
        fireproximityprompt(proximityPrompt, 1, false)
        
        -- Optionally reset the HoldDuration after the second interaction
        proximityPrompt.HoldDuration = 0.1 -- Assuming the default value was 0.1 seconds
    else
        warn("ProximityPrompt not found for Zoro")
    end
end

-- Create Interact Button for Zoro
local zoroButton = Instance.new("TextButton")
zoroButton.Name = "ZoroButton"
zoroButton.Parent = screenGui
zoroButton.Size = UDim2.new(0, 150, 0, 50)
zoroButton.Position = UDim2.new(0.5, -75, 0.5, -35) -- Adjusted position above the Quest Giver button
zoroButton.Text = "Interact with Zoro"
zoroButton.Font = Enum.Font.SourceSans
zoroButton.TextSize = 14
zoroButton.TextColor3 = Color3.fromRGB(255, 255, 255)
zoroButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
zoroButton.BorderColor3 = Color3.fromRGB(80, 80, 80)
zoroButton.BorderSizePixel = 2
zoroButton.MouseButton1Click:Connect(interactWithZoro)

-- Create Tween to Quest Giver Button
local questGiverButton = Instance.new("TextButton")
questGiverButton.Name = "QuestGiverButton"
questGiverButton.Parent = screenGui
questGiverButton.Size = UDim2.new(0, 150, 0, 50)
questGiverButton.Position = UDim2.new(0.5, -75, 0.5, -85) -- Adjusted position below the Zoro button
questGiverButton.Text = "Tween to Quest Giver"
questGiverButton.Font = Enum.Font.SourceSans
questGiverButton.TextSize = 14
questGiverButton.TextColor3 = Color3.fromRGB(255, 255, 255)
questGiverButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
questGiverButton.BorderColor3 = Color3.fromRGB(80, 80, 80)
questGiverButton.BorderSizePixel = 2
questGiverButton.MouseButton1Click:Connect(function()
    local player = Players.LocalPlayer
    local character = player.Character
    if not character then return end
    
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then return end
    
    -- Tween to QuestGiverCoords
    local targetPosition = Vector3.new(X_QuestGiver, Y_QuestGiver, Z_QuestGiver)
    local tween = TweenService:Create(humanoidRootPart, TweenInfo.new(2), {CFrame = CFrame.new(targetPosition)})
    tween:Play()
    tween.Completed:Wait()
end)

-- GUI creation and event connections for closing the GUI remain unchanged

-- Create Close GUI Button
local closeGuiButton = Instance.new("TextButton")
closeGuiButton.Name = "CloseGuiButton"
closeGuiButton.Parent = screenGui
closeGuiButton.Size = UDim2.new(0, 100, 0, 30)
closeGuiButton.Position = UDim2.new(0.5, -50, 0.6, 0) -- Positioned below the Interact Button
closeGuiButton.Text = "Close GUI"
closeGuiButton.Font = Enum.Font.SourceSans
closeGuiButton.TextSize = 14
closeGuiButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeGuiButton.BackgroundColor3 = Color3.fromRGB(200, 0, 0) -- Red for visibility
closeGuiButton.BorderColor3 = Color3.fromRGB(80, 80, 80)
closeGuiButton.BorderSizePixel = 2

-- Toggle GUI visibility on Close GUI button click
closeGuiButton.MouseButton1Click:Connect(function()
    screenGui.Enabled = not screenGui.Enabled
end)
