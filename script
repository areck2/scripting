local teleport = loadstring(game:HttpGet("https://raw.githubusercontent.com/Introvert1337/RobloxReleases/main/Scripts/Jailbreak/Teleporation.lua"))()

-- create a ScreenGui object to hold our GUI
local gui = Instance.new("ScreenGui")
gui.Name = "TeleportationGUI"
gui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

-- create a Frame to hold our buttons
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0.4, 0, 0.4, 0)
frame.Position = UDim2.new(0.5, -100, 0.5, -60)
frame.AnchorPoint = Vector2.new(0.5, 0.5)
frame.BackgroundColor3 = Color3.fromRGB(51, 51, 51)
frame.BorderSizePixel = 0
frame.Parent = gui

-- jstore rob
loadstring(game:HttpGet("https://raw.githubusercontent.com/areck2/scripting/main/tp%20to%20j%20store"))()

-- create a Button to teleport to the Bank
local bankButton = Instance.new("TextButton")
bankButton.Size = UDim2.new(0.8, 0, 0.35, 0)
bankButton.Position = UDim2.new(0.1, 0, 0.5, 0)
bankButton.Text = "Teleport to Bank"
bankButton.Font = Enum.Font.SourceSansBold
bankButton.TextSize = 16
bankButton.TextColor3 = Color3.fromRGB(255, 255, 255)
bankButton.AutoButtonColor = false
bankButton.BackgroundColor3 = Color3.fromRGB(78, 84, 200)
bankButton.BorderSizePixel = 1
bankButton.Parent = frame

-- function to execute the script when the Bank button is clicked
local function onBankButtonClicked()
   teleport(CFrame.new(-3, 18, 871))
   bankButton.MouseButton1Click:Disconnect()
   wait(5)
   bankButton.MouseButton1Click:Connect(onBankButtonClicked)
end

bankButton.MouseButton1Click:Connect(onBankButtonClicked)
-- stuff for gui moving
-- create a variable to store the last position of the mouse
local lastPos

-- make the frame moveable
frame.Active = true
frame.Draggable = true

-- update the last position of the mouse when it moves over the frame
frame.MouseMoved:Connect(function(input)
    if UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) then
        local delta = input.Position - lastPos
        frame.Position = UDim2.new(frame.Position.X.Scale, frame.Position.X.Offset + delta.X, frame.Position.Y.Scale, frame.Position.Y.Offset + delta.Y)
    end
    lastPos = input.Position
end)
